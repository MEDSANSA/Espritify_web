<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='utf-8' />
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js'></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>

        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: '/api/events', // Endpoint pour récupérer les événements depuis la base de données
                dateClick: function(info) {
                    // Ouvrir un formulaire de création d'événement avec la date sélectionnée
                    openEventForm(info.dateStr);
                }
            });
            calendar.render();
            function openEventForm(date) {
                // Créer une fenêtre modale Bootstrap pour afficher le formulaire de création d'événement
                var modal = `
        <div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="eventModalLabel">Créer un nouvel événement</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <!-- Formulaire de création d'événement -->
                        <form id="eventForm">
                            <div class="mb-3">
                                <label for="eventTitle" class="form-label">Titre de l'événement</label>
                                <input type="text" class="form-control" id="eventTitle" required>
                            </div>
                            <div class="mb-3">
                                <label for="eventDate" class="form-label">Date de début</label>
                                <input type="text" class="form-control" id="eventDate" value="${date}" readonly>
                            </div>
                            <!-- Ajoutez d'autres champs du formulaire si nécessaire -->
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                        <button type="button" class="btn btn-primary" id="saveEventBtn">Enregistrer</button>
                    </div>
                </div>
            </div>
        </div>
    `;

                // Ajouter la fenêtre modale au document
                document.body.insertAdjacentHTML('beforeend', modal);

                // Afficher la fenêtre modale
                var eventModal = new bootstrap.Modal(document.getElementById('eventModal'));
                eventModal.show();

                // Ajouter un gestionnaire d'événement pour le bouton d'enregistrement
                var saveEventBtn = document.getElementById('saveEventBtn');
                saveEventBtn.addEventListener('click', saveEvent);
            }

            function saveEvent() {
                // Récupérer les données du formulaire
                var title = document.getElementById('eventTitle').value;
                var date = document.getElementById('eventDate').value;

                // Envoyer les données au serveur via une requête HTTP POST
                fetch('/api/events/new', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        titre: title,
                        dateDebut: date,
                        // Ajoutez d'autres propriétés de l'événement si nécessaire
                    }),
                })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        }
                        throw new Error('Erreur lors de la création de l\'événement');
                    })
                    .then(data => {
                        // Gérer la réponse du serveur (par exemple, fermer la fenêtre modale et rafraîchir le calendrier)
                        var eventModal = bootstrap.Modal.getInstance(document.getElementById('eventModal'));
                        eventModal.hide();
                        // Rafraîchir le calendrier pour afficher le nouvel événement
                        // Vous pouvez également ajouter une fonction de rafraîchissement du calendrier ici
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        // Afficher un message d'erreur à l'utilisateur
                    });
            }

        });

    </script>
</head>
<body>
<div id='calendar'></div>
</body>
</html>